####
# Dieses Dockerfile wird verwendet, um einen Container zu erstellen, der die Spring Boot-Anwendung im JVM-Modus ausführt
#
# Bevor Sie das Container-Image erstellen, führen Sie Folgendes aus:
#
# ./mvnw package
#
# Dann erstellen Sie das Image mit:
#
# docker build -t springboot/backend .
#
# Dann starten Sie den Container mit:
#
# docker run -i --rm -p 8080:8080 springboot/backend
#
# Wenn Sie den Debug-Port in Ihr Docker-Image aufnehmen möchten,
# müssen Sie den Debug-Port (standardmäßig 5005) wie folgt freigeben:  EXPOSE 8080 5005.
# Zusätzlich müssen Sie -e JAVA_DEBUG=true und -e JAVA_DEBUG_PORT=*:5005 setzen
# beim Ausführen des Containers
#
# Dann starten Sie den Container mit:
#
# docker run -i --rm -p 8080:8080 springboot/backend
#
# Dieses Image verwendet das `run-java.sh`-Skript, um die Anwendung auszuführen.
# Dieses Skript berechnet die Befehlszeile zur Ausführung Ihrer Java-Anwendung und
# enthält Speicher-/GC-Anpassungen.
# Sie können das Verhalten mit den folgenden Umgebungsvariablen konfigurieren:
# - JAVA_OPTS: JVM-Optionen, die dem `java`-Befehl übergeben werden (Beispiel: "-verbose:class")
# - JAVA_OPTS_APPEND: Benutzerdefinierte Java-Optionen, die an die generierten Optionen in JAVA_OPTS angehängt werden sollen
#   (Beispiel: "-Dsome.property=foo")
# - Weitere Umgebungsvariablen sind möglich.
# Beachten Sie, dass in diesem Beispiel einige Variablen festgelegt sind, um Ihre Anforderungen zu erfüllen.

###

# Verwenden Sie das offizielle OpenJDK-17-JDK-Slim-Image als Basisimage
FROM openjdk:17-jdk-slim

# Setzen Sie hier Umgebungsvariablen für Ihre Anwendung, falls erforderlich
ENV DB_HOST=localhost
ENV JAVA_DEBUG=true
ENV JAVA_DEBUG_PORT=5005
ENV SERVER_ADDRESS=0.0.0.0

# Kopieren Sie die kompilierten Spring Boot-Artefakte in den Container
COPY target/*.jar /app.jar

# Exponieren Sie den Port, den Ihre Anwendung verwenden wird, sowie den Debug-Port
EXPOSE 8080 5005

ENV DB_HOST=host.docker.internal

# Starten Sie die Anwendung beim Starten des Containers
ENTRYPOINT ["java", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005", "-Dserver.address=0.0.0.0", "-jar", "/app.jar"]

