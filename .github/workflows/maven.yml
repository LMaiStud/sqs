name: Java CI with Maven and React

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: data
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build backend with Maven
        run: mvn -B package --file backend/pom.xml

      - name: Build frontend with npm
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Prepare lowercase variables
        run: echo "LOWER_REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/src/main/java/com/sqs_maier/docker/Dockerfile.jvm
          push: true
          tags: ghcr.io/${{ env.LOWER_REPO_NAME }}/sqs_backend:latest

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ env.LOWER_REPO_NAME }}/sqs_frontend:latest

      - name: Stop and remove any running containers
        run: |
          docker ps -q | xargs docker stop
          docker ps -aq | xargs docker rm

      - name: Start Docker Compose
        run: docker-compose -f ./docker-compose.yml up -d


      - name: Install Playwright
        run: npm install @playwright/test@^1.44.1

      - name: Run Playwright Tests
        run: |
          cd frontend
          cd src
          cd tests
          playwright test tests